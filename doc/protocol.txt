RK Protocol


request
=======

char        USBC[4];
uint32_t    random;         // is echoed by device in result/status response
uint32_t    reserved;

uint8_t     flag;
uint8_t     reserved2;
uint8_t     foo;
uint8_t     command;
uint8_t     bar;

uint32_t    address_big_endian;
uint16_t    reserved3;
uint32_t    num_sectors_big_endian;
uint32_t    reserved4;
-------- +
31 bytes



response
========

char        USBS[4];
uint32_t    random;
uint32_t    foo;
uint8_t     error_flag;
-------- +
13 bytes



12      14      15
flag    foo     cmd
-------+-------+-------
0x80    0x06    0x00    TestUnitReady
0x80    0x06    0x01    ReadFlashID
0x80    0x06    0x1a    ReadFlashInfo
0x80    0x06    0x1b    ReadChipInfo
0x80    0x06    0x20    ReadEfuse

0x00    0x06    0x02    SetDeviceInfo
0x00    0x06    0x16    EraseSystemDisk
0x00    0x06    0x1e    SetResetFlag
0x00    0x06    0xff    ResetDevice

0x80    0x0a    0x03    TestBadBlock
0x80    0x0a    0x04    ReadSector
0x80    0x0a    0x14    ReadLBA
0x80    0x0a    0x17    ReadSDRAM
0x80    0x0a    0x21

0x00    0x0a    0x05    WriteSector
0x00    0x0a    0x06
0x00    0x0a    0x0b
0x00    0x0a    0x15    WriteLBA
0x00    0x0a    0x18    WriteSDRAM
0x00    0x0a    0x19    ExecuteSDRAM
0x00    0x0a    0x1f    WriteEfuse
0x00    0x0a    0x22

0x80    0x10    0x07    WriteSpare
0x80    0x10    0x08    ReadSpare

0x00    0x00    0x1c    LowerFormat
0x00    0x00    0x30

